name: CI Build for MSVC

on: 
  push:
    branches:
      - master

env:
  BUILD_TYPE: Release


jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: 
        - {
            name: "Windows Latest MSVC x64", 
            artifact: "Windows-msvc-x64.tar.xz",
            os: windows-latest,
            cc: "cl", cxx: "cl", devenv: "devenv", msbuild: "msbuild",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }


    steps:
    - name: Checkout
      uses: actions/checkout@v2
   
    - name: Upgrade Capstone lib
      shell: pwsh
      run: |
Function Invoke-CmdScript {
  param(
    [String] $scriptName
  )
  $cmdLine = """$scriptName"" $args & set"
  & $env:SystemRoot\system32\cmd.exe /c $cmdLine |
  Select-String '^([^=]*)=(.*)$' | ForEach-Object {
    $varName = $_.Matches[0].Groups[1].Value
    $varValue = $_.Matches[0].Groups[2].Value
    Set-Item Env:$varName $varValue
  }
}


Function Invoke-VisualStudio2019x86
{
  Invoke-CmdScript "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars32.bat"
}


Function Invoke-VisualStudio2019x64
{
  Invoke-CmdScript "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
}       

        cd libs\
        git clone https://github.com/aquynh/capstone.git
        cd capstone\msvc
        Invoke-VisualStudio2019x64
        devenv capstone.sln /upgrade

    - name: Build Capstone lib
      shell: cmd
      run: |
        cd libs\capstone\msvc
        msbuild capstone.sln -nologo /m /p:Configuration=$ENV{BUILD_TYPE}


    - name: Compile pwn++ DLL
      shell: cmd
      run: |
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        msbuild pwn++.sln -nologo /m /p:Configuration=$ENV{BUILD_TYPE}
